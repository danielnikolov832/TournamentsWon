// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TournamentsRegister.DAL;

#nullable disable

namespace TournamentsRegister.DAL.Migrations
{
    [DbContext(typeof(TournamentContext))]
    partial class TournamentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.PlayerDAO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TeamName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TeamDAOID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeamDAOID");

                    b.ToTable("PlayerDAOs");
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.TeamDAO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TeamName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TournamentDAOID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TournamentDAOID");

                    b.ToTable("TeamDAOs");
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.TournamentDAO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TeamName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ID");

                    b.ToTable("TournamentDAOs");
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.PlayerDAO", b =>
                {
                    b.HasOne("TournamentsRegister.DAL.DAOs.TeamDAO", null)
                        .WithMany("get_players")
                        .HasForeignKey("TeamDAOID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.TeamDAO", b =>
                {
                    b.HasOne("TournamentsRegister.DAL.DAOs.TournamentDAO", null)
                        .WithMany("Teams")
                        .HasForeignKey("TournamentDAOID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.TeamDAO", b =>
                {
                    b.Navigation("get_players");
                });

            modelBuilder.Entity("TournamentsRegister.DAL.DAOs.TournamentDAO", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
